{"version":3,"sources":["PageCharacters/CenterComponent.js","PageCharacters/CharacterCard.js","PageCharacters/Characters.js","PageCharacters/CharactersGrid.js","PageCharacters/PageCharacters.js","App.js","index.js"],"names":["CenterComponent","props","Grid","container","spacing","direction","alignItems","justify","style","minHeight","item","xs","children","useStyles","makeStyles","theme","root","padding","textAlign","color","palette","text","secondary","media","height","CharacterCard","classes","Card","className","CardActionArea","CardMedia","image","title","name","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","Characters","characters","map","character","index","console","log","flexGrow","CharactersGrid","charactersChunks","_","chunk","GET_ALL_CHARACTERS","gql","PageCharacters","useState","filterName","setFilterName","setCharacters","useLazyQuery","variables","filter","loadCharacters","loading","called","data","error","useEffect","results","length","Input","onChange","e","value","target","placeholder","CircularProgress","App","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0a7fa0d7.chunk.js","sourcesContent":["import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nexport function CenterComponent(props) {\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: '100vh' }}\n    >\n\n      <Grid item xs={3}>\n        {props.children}\n      </Grid>\n\n    </Grid>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  media: {\n    height: 240,\n  },\n}));\n\nexport function CharacterCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.image}\n          title={props.name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nCharacterCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { CharacterCard } from './CharacterCard';\n\nexport function Characters(props) {\n  return props.characters.map((character, index) => {\n    console.log('index', index);\n    return (\n      <Grid item xs={4} key={index}>\n        <CharacterCard name={character.name} image={character.image} />\n      </Grid>\n    );\n  });\n}\n\nCharacters.propTypes = {\n  characters: PropTypes.shape(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport _ from 'lodash';\n\nimport { Characters } from './Characters';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport function CharactersGrid(props) {\n  const classes = useStyles();\n\n  const charactersChunks = _.chunk(props.characters, 3);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <>\n          {\n            charactersChunks.map((characters) => (\n              <Grid container item xs={12} spacing={3}>\n                <Characters characters={characters} />\n              </Grid>\n            ))\n          }\n        </>\n      </Grid>\n    </div>\n  );\n}\n\nCharactersGrid.propTypes = {\n  characters: PropTypes.shape(PropTypes.string).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nimport { Input } from '@material-ui/core';\nimport {\n  useQuery,\n  gql,\n  useLazyQuery,\n} from '@apollo/client';\n\nimport { CenterComponent } from './CenterComponent';\nimport { CharactersGrid } from './CharactersGrid';\n\nconst GET_ALL_CHARACTERS = gql`\n  query AllCharacters($page: Int, $filter: FilterCharacter) {\n    characters(page: $page, filter: $filter) {\n      results {\n        id\n        name\n        status\n        species\n        type\n        gender\n        image\n        created\n      }\n    }\n  }\n`;\n\nexport function PageCharacters(props) {\n  const [filterName, setFilterName] = useState('');\n  const [characters, setCharacters] = useState([]);\n\n  const [\n    loadCharacters,\n    {\n      called, loading, data, error,\n    },\n  ] = useLazyQuery(GET_ALL_CHARACTERS, {\n    variables: { filter: { name: filterName } },\n  });\n\n  useEffect(() => {\n    loadCharacters();\n  }, [filterName]);\n\n  useEffect(() => {\n    if (data && data.characters && data.characters.results.length > 0) {\n      const characters = data.characters.results;\n      setCharacters(characters);\n    }\n  }, [data]);\n\n  function handleFilterNameChange(e) {\n    const { value } = e.target;\n    setFilterName(value);\n  }\n\n  console.log('characters', characters);\n\n  function renderCharacters() {\n    if (loading) return <CenterComponent><CircularProgress /></CenterComponent>;\n    if (error) return <CenterComponent>Not Found...</CenterComponent>;\n    return <CharactersGrid characters={characters} />;\n  }\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Grid item xs={3}>\n          <Input onChange={handleFilterNameChange} value={filterName} placeholder=\"search characters...\" />\n        </Grid>\n        {renderCharacters()}\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { PageCharacters } from './PageCharacters';\n\nfunction App() {\n  return (\n    <div>\n      <PageCharacters filterName=\"filterName\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from '@apollo/client';\nimport App from './App';\n\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}